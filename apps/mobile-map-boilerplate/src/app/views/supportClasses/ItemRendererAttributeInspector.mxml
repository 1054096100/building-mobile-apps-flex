<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2008-2013 Esri. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////
-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:esri="http://www.esri.com/2008/ags"
                dataChange="dataChangeHandler(event)"
                autoDrawBackground="false">

    <fx:Script>
        <![CDATA[
            import com.esri.ags.esri_internal;
            import com.esri.ags.layers.FeatureLayer;
            import com.esri.mobile.managers.supportClasses.InfoWindowData;
            
            import mx.events.FlexEvent;
            
            use namespace esri_internal;
            
            override protected function measure():void
            {
                super.measure();
                
                measuredWidth = attributeInspector.getExplicitOrMeasuredWidth();
                measuredHeight = attributeInspector.getExplicitOrMeasuredHeight();
            }

            protected function dataChangeHandler(event:FlexEvent):void
            {
                var infoWindowData:InfoWindowData = data as InfoWindowData;
                if (infoWindowData)
                {
                    var featureLayer:FeatureLayer = infoWindowData.graphic.graphicsLayer as FeatureLayer;
                    attributeInspector.featureLayers = [ featureLayer ];
                    if (featureLayer)
                    {
                        // ycabon: Not supported yet call to showFeature
                        attributeInspector.esri_internal::showFeature(infoWindowData.graphic, featureLayer);
                    }
                }
            }
        ]]>
    </fx:Script>

    <esri:AttributeInspector id="attributeInspector"
                             width="100%" height="100%"
                             updateEnabled="false"/>

</s:ItemRenderer>
