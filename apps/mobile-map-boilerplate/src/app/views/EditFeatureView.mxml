<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2008-2013 Esri. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////
-->
<components:View xmlns:fx="http://ns.adobe.com/mxml/2009"
                 xmlns:s="library://ns.adobe.com/flex/spark"
                 xmlns:components="com.esri.mobile.components.*"
                 xmlns:esri="http://www.esri.com/2008/ags"
                 xmlns:supportClasses="com.esri.mobile.components.supportClasses.*"
                 viewActivate="viewActivateHandler(event)">
    <fx:Script>
        <![CDATA[
            import com.esri.ags.Graphic;
            import com.esri.ags.layers.FeatureLayer;
            import com.esri.mobile.managers.supportClasses.InfoWindowData;

            import spark.events.ViewNavigatorEvent;

            protected function viewActivateHandler(event:ViewNavigatorEvent):void
            {
                /* var graphic:Graphic = data as Graphic;
                editor.map = applicationContext.map;
                editor.featureLayers = [ graphic.graphicsLayer as FeatureLayer ]; */

                //setActionMode();
                var iwd:InfoWindowData = data as InfoWindowData;
                this.title = iwd.getAttribute(iwd.labelField);
                this.setStyle("icon", iwd.icon);

                var graphic:Graphic = iwd.graphic;
                var featureLayer:FeatureLayer = graphic.graphicsLayer as FeatureLayer;


                attributeInspector.featureLayers = [ featureLayer ];
                attributeInspector.showFeature(graphic, featureLayer);
            }
        ]]>
    </fx:Script>
    <!--
        <esri:Editor id="editor"
                     width="100%" height="100%"/>-->

    <esri:AttributeInspector id="attributeInspector"
                             width="100%" height="100%"
                             updateEnabled="true"/>

    <components:menuItems>
        <supportClasses:MenuItem label="Delete"/>
        <supportClasses:MenuItem label="Save"/>
    </components:menuItems>

</components:View>
